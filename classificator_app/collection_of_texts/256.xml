<?xml version="1.0" ?>
<doc>
	<label auto="true" type="str" verify="true"><![CDATA[Develop]]></label>
	<author auto="true" type="list" verify="true">
		<item type="str"><![CDATA[guinmoon]]></item>
	</author>
	<date auto="true" type="str" verify="true"><![CDATA[2022-12-09, 21:32]]></date>
	<link auto="true" type="str" verify="true"><![CDATA[https://habr.com/ru/post/703292/]]></link>
	<title auto="true" type="str" verify="true"><![CDATA[Нарисуй сон]]></title>
	<categories auto="true" type="list" verify="true">
		<item type="str"><![CDATA[Python]]></item>
		<item type="str"><![CDATA[Разработка под iOS]]></item>
		<item type="str"><![CDATA[Машинное обучение]]></item>
		<item type="str"><![CDATA[Искусственный интеллект]]></item>
	</categories>
	<key_words auto="true" type="list" verify="true">
		<item type="str"><![CDATA[womboart]]></item>
		<item type="str"><![CDATA[python]]></item>
		<item type="str"><![CDATA[a-shell]]></item>
		<item type="str"><![CDATA[shortcuts]]></item>
		<item type="str"><![CDATA[ios]]></item>
		<item type="str"><![CDATA[обои]]></item>
		<item type="str"><![CDATA[обои для рабочего стола]]></item>
	</key_words>
	<text auto="true" type="str" verify="true"><![CDATA[Нейронные сети, рисующие “всякое” по запросу, не обошли стороной и меня. После того, как наигрался, я решил, что так как тема из области искусственного интеллекта, то и интерфейс взаимодействия нужен соответствующий. Например, голос и желательно на русском языке. Так появилась идея создать быструю команду для siri. Что из этого получилось, читайте далее. В конце статьи - видео, ссылки на быстрые команды, репозиторий с необходимыми файлами и инструкция по установке.
В качестве генератора изображений я выбрал Wombo Dream, так как нейросеть выдает неплохие результаты и имеет простой API. В качестве основы используется скрипт на python, который делает серию запросов в Dream и получает ссылку на итоговое изображение. Wombo в качестве входных данных принимает текст на английском, поэтому отдельно написан метод перевода с русского языка через google translate.
Мой выбор приложения, поддерживающего запуск скриптов на python из быстрой команды, остановился на a-shell. Если "приложение не доступно в вашей стране", его можно установить через TestFlight. При запуске скрипта из быстрой команды с использованием расширения (в фоне) есть ограничения:
Нет возможности подключить модули установленные с помощью pip
Время выполнения не должно превышать 5 секунд
Иногда вылетает без объяснения причины
Учитывая ограничения, в скрипт добавлена возможность разделить взаимодействие с Wombo на этапы. Методом проб и ошибок я пришёл к следующему алгоритму действий:
Получение входных данных (Siri или клавиатура)
Перевод полученного текста на английский
Запрос в wombo dream
Получение идентификатора задачи
Опрос задачи по идентификатору до тех пор пока ее статус не изменится на completed
Получение ссылки на итоговое изображение
Скачивание изображения
Обрезка изображения
Отображение результата + Сохранение изображения в фото и установка в качестве обоев (опционально)
Быстрая команда.
Репозиторий со скриптом и инструкцией по установке.
Дополнительно
Если при выполнении после ожидания возникает ошибка
Установка обоев по расписанию
Случайный рисунок
P.S. Помимо Wombo Dream есть и другие проекты , если кто то знает как с ними взаимодействовать (желательно на бесплатной основе) напишите пожалуйста в комментариях.   Нейронные сети, рисующие “всякое” по запросу, не обошли стороной и меня. После того, как наигрался, я решил, что так как тема из области искусственного интеллекта, то и интерфейс взаимодействия нужен соответствующий. Например, голос и желательно на русском языке. Так появилась идея создать быструю команду для siri. Что из этого получилось, читайте далее. В конце статьи - видео, ссылки на быстрые команды, репозиторий с необходимыми файлами и инструкция по установке. репозиторий с необходимыми файлами и инструкция по установке В качестве генератора изображений я выбрал Wombo Dream, так как нейросеть выдает неплохие результаты и имеет простой API. В качестве основы используется скрипт на python, который делает серию запросов в Dream и получает ссылку на итоговое изображение. Wombo в качестве входных данных принимает текст на английском, поэтому отдельно написан метод перевода с русского языка через google translate. Wombo Dream google translate Мой выбор приложения, поддерживающего запуск скриптов на python из быстрой команды, остановился на a-shell. Если "приложение не доступно в вашей стране", его можно установить через TestFlight. При запуске скрипта из быстрой команды с использованием расширения (в фоне) есть ограничения: a-shell TestFlight Нет возможности подключить модули установленные с помощью pip
Время выполнения не должно превышать 5 секунд
Иногда вылетает без объяснения причины Нет возможности подключить модули установленные с помощью pip Нет возможности подключить модули установленные с помощью pip Время выполнения не должно превышать 5 секунд Время выполнения не должно превышать 5 секунд Иногда вылетает без объяснения причины Иногда вылетает без объяснения причины Учитывая ограничения, в скрипт добавлена возможность разделить взаимодействие с Wombo на этапы. Методом проб и ошибок я пришёл к следующему алгоритму действий: Получение входных данных (Siri или клавиатура)
Перевод полученного текста на английский
Запрос в wombo dream
Получение идентификатора задачи
Опрос задачи по идентификатору до тех пор пока ее статус не изменится на completed
Получение ссылки на итоговое изображение
Скачивание изображения
Обрезка изображения
Отображение результата + Сохранение изображения в фото и установка в качестве обоев (опционально) Получение входных данных (Siri или клавиатура) Получение входных данных (Siri или клавиатура) Перевод полученного текста на английский Перевод полученного текста на английский Запрос в wombo dream Запрос в wombo dream Получение идентификатора задачи Получение идентификатора задачи Опрос задачи по идентификатору до тех пор пока ее статус не изменится на completed Опрос задачи по идентификатору до тех пор пока ее статус не изменится на completed Получение ссылки на итоговое изображение Получение ссылки на итоговое изображение Скачивание изображения Скачивание изображения Обрезка изображения Обрезка изображения Отображение результата + Сохранение изображения в фото и установка в качестве обоев (опционально) Отображение результата + Сохранение изображения в фото и установка в качестве обоев (опционально)  Быстрая команда. Быстрая команда. Репозиторий со скриптом и инструкцией по установке. Репозиторий со скриптом и инструкцией по установке Дополнительно Если при выполнении после ожидания возникает ошибка Если при выполнении после ожидания возникает ошибка    Установка обоев по расписанию Установка обоев по расписанию            Случайный рисунок Случайный рисунок      P.S. Помимо Wombo Dream есть и другие проекты , если кто то знает как с ними взаимодействовать (желательно на бесплатной основе) напишите пожалуйста в комментариях. другие проекты ]]></text>
</doc>

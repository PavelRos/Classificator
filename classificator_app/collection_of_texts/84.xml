<?xml version="1.0" ?>
<doc>
	<label auto="true" type="str" verify="true"><![CDATA[Develop]]></label>
	<author auto="true" type="list" verify="true">
		<item type="str"><![CDATA[KosteevAlex]]></item>
	</author>
	<date auto="true" type="str" verify="true"><![CDATA[2022-12-15, 10:27]]></date>
	<link auto="true" type="str" verify="true"><![CDATA[https://habr.com/ru/post/705648/]]></link>
	<title auto="true" type="str" verify="true"><![CDATA[Визуализация данных]]></title>
	<categories auto="true" type="list" verify="true">
		<item type="str"><![CDATA[Microsoft SQL Server]]></item>
		<item type="str"><![CDATA[Визуализация данных]]></item>
		<item type="str"><![CDATA[Хранилища данных]]></item>
	</categories>
	<key_words auto="true" type="list" verify="true">
		<item type="str"><![CDATA[ssrs]]></item>
		<item type="str"><![CDATA[ssrs-отчеты]]></item>
		<item type="str"><![CDATA[powerbi]]></item>
		<item type="str"><![CDATA[ssas]]></item>
		<item type="str"><![CDATA[mssql]]></item>
		<item type="str"><![CDATA[mssqlserver]]></item>
		<item type="str"><![CDATA[olap]]></item>
		<item type="str"><![CDATA[olap-кубы]]></item>
	</key_words>
	<text auto="true" type="str" verify="true"><![CDATA[Основная статья Взаимодействие DWH Oracle и MS SQL
Финальным результатом при построении аналитического хранилища является передача готовых данных пользователям.
Для отображения данных из OLAP кубов используется настольное приложение Business Analytics tools (BAT). Данное приложение состоит фактически из двух приложений: приложение для просмотра, редактирования отчетов пользователями и приложение для
администрирования, в котором создается подключение к кубам данных, выполняется настройка ролей для распределения прав доступов и создается базовая структура отчетов.
Рис. 1 Главное окно со списком отчетов
Примерный вид приложения показан (см. Рис. 1).
После открытия отчета по умолчанию открывается базовый отчет, созданный администратором. Так же любой пользователь может создавать свой собственный отчет, который будет доступен ему, или же при желании он может поделиться своим собственным отчетом с другими пользователя, у которых есть подходящая роль с доступом к данному типу отчетов.
Пример отчета показан (см. Рис. 2). Пользователь может конструировать отчет используя измерения и меры, в любом требующем для него порядке, распределяя данные по столбцам или строкам. За счет этого достигается гибкость получения данных любого уровня гранулярности и возможность мгновенной агрегации больших объемов данных.  После или вовремя конструирования отчета приложение генерирует MDX запрос, с помощью которого автоматически подгружаются данные по заданным критериям. Возможно создание графиков и диаграмм, настройки фильтров, форматирования и многое другое. Результаты можно сохранять в формате Excel.
Рис. 2 Пример отображения отчета
Второй способ получения данных из базы данных или кубов – это использование возможностей SQL Server Reporting Services (SSRS). Для создания отчета в SSRS необходимо предварительно написать запрос SQL, MDX или создать процедуру, которая будет выдавать набор данных для построения отчетов. Далее в Visual Studio настроить макет отчета или воспользоваться мастером для создания простых отчетов.
В SSRS можно создавать отчеты разнообразной сложности и вида, которые будут содержать, как данные, так и графики и диаграммы. Данные будут представлены конечному пользователю только в плоском виде. Полная поддержка выгружаемых отчетов в Excel, но также и есть другие форматы данных (см. Рис. 3).
Рис. 3 Экспорт файлов
Пример простого отчета приведен (см. Рис. 4). В котором можно задать параметры выгружаемого отчета, например Дата и Валюта. Доступен как множественный, так и единичный выбор. Все зависит от потребностей для конкретного отчета.
Рис. 4 Представление отчета в браузере
Способами доставки отчета могут быть: получение его по почте, выгрузка сформированного отчета в каталог на общем сетевом диске или просмотр данных через браузер на сервере SSRS. Пример файла, сохраняемого в Excel (см. Рис. 5).
Рис. 5 Excel выгрузка
Третий способ — это конструирование отчета в Power BI Desktop и просмотр его в веб интерфейсе SSRS. Данные в этом случае больше подходят для анализа управленческого учета, так как отражают агрегированные данные в динамике, в зависимости от выбираемых параметров. Отчет разворачивается на SSRS сервер, в котором так же размещаются классические отчеты SSRS из подхода выше (см. Рис. 6).
Показателями могут быть KPI, диаграммы продаж и т.п. Есть возможность обращения к множеству различных источников таких как БД, файлы и подключение к кубам данных. Для реализации такого типа отчетов необходимы умения BI разработчика. Данные можно сохранять в Excel. Пример отчета (см. Рис. 7).
Рис. 6 Отчет PowerBI на сервере SSRS
Рис. 7 Пример отчета из галереи PowerBI Desktop Основная статья Взаимодействие DWH Oracle и MS SQL Взаимодействие DWH Oracle и MS SQL Финальным результатом при построении аналитического хранилища является передача готовых данных пользователям. Для отображения данных из OLAP кубов используется настольное приложение Business Analytics tools (BAT). Данное приложение состоит фактически из двух приложений: приложение для просмотра, редактирования отчетов пользователями и приложение для
администрирования, в котором создается подключение к кубам данных, выполняется настройка ролей для распределения прав доступов и создается базовая структура отчетов. Business Analytics tools   Рис. 1 Главное окно со списком отчетов Примерный вид приложения показан (см. Рис. 1). После открытия отчета по умолчанию открывается базовый отчет, созданный администратором. Так же любой пользователь может создавать свой собственный отчет, который будет доступен ему, или же при желании он может поделиться своим собственным отчетом с другими пользователя, у которых есть подходящая роль с доступом к данному типу отчетов. Пример отчета показан (см. Рис. 2). Пользователь может конструировать отчет используя измерения и меры, в любом требующем для него порядке, распределяя данные по столбцам или строкам. За счет этого достигается гибкость получения данных любого уровня гранулярности и возможность мгновенной агрегации больших объемов данных.  После или вовремя конструирования отчета приложение генерирует MDX запрос, с помощью которого автоматически подгружаются данные по заданным критериям. Возможно создание графиков и диаграмм, настройки фильтров, форматирования и многое другое. Результаты можно сохранять в формате Excel.  Рис. 2 Пример отображения отчета Второй способ получения данных из базы данных или кубов – это использование возможностей SQL Server Reporting Services (SSRS). Для создания отчета в SSRS необходимо предварительно написать запрос SQL, MDX или создать процедуру, которая будет выдавать набор данных для построения отчетов. Далее в Visual Studio настроить макет отчета или воспользоваться мастером для создания простых отчетов. В SSRS можно создавать отчеты разнообразной сложности и вида, которые будут содержать, как данные, так и графики и диаграммы. Данные будут представлены конечному пользователю только в плоском виде. Полная поддержка выгружаемых отчетов в Excel, но также и есть другие форматы данных (см. Рис. 3). Рис. 3 Экспорт файлов  Рис. 3 Экспорт файлов Пример простого отчета приведен (см. Рис. 4). В котором можно задать параметры выгружаемого отчета, например Дата и Валюта. Доступен как множественный, так и единичный выбор. Все зависит от потребностей для конкретного отчета. Рис. 4 Представление отчета в браузере  Рис. 4 Представление отчета в браузере Способами доставки отчета могут быть: получение его по почте, выгрузка сформированного отчета в каталог на общем сетевом диске или просмотр данных через браузер на сервере SSRS. Пример файла, сохраняемого в Excel (см. Рис. 5).  Рис. 5 Excel выгрузка Третий способ — это конструирование отчета в Power BI Desktop и просмотр его в веб интерфейсе SSRS. Данные в этом случае больше подходят для анализа управленческого учета, так как отражают агрегированные данные в динамике, в зависимости от выбираемых параметров. Отчет разворачивается на SSRS сервер, в котором так же размещаются классические отчеты SSRS из подхода выше (см. Рис. 6). Показателями могут быть KPI, диаграммы продаж и т.п. Есть возможность обращения к множеству различных источников таких как БД, файлы и подключение к кубам данных. Для реализации такого типа отчетов необходимы умения BI разработчика. Данные можно сохранять в Excel. Пример отчета (см. Рис. 7). Рис. 6 Отчет PowerBI на сервере SSRS  Рис. 6 Отчет PowerBI на сервере SSRS  Рис. 7 Пример отчета из галереи PowerBI Desktop ]]></text>
</doc>

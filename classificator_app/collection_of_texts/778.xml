<?xml version="1.0" ?>
<doc>
	<label auto="true" type="str" verify="true"><![CDATA[Other]]></label>
	<author auto="true" type="list" verify="true">
		<item type="str"><![CDATA[alizar]]></item>
	</author>
	<date auto="true" type="str" verify="true"><![CDATA[2022-11-28, 12:00]]></date>
	<link auto="true" type="str" verify="true"><![CDATA[https://habr.com/ru/company/ruvds/blog/699684/]]></link>
	<title auto="true" type="str" verify="true"><![CDATA[Упс и опаньки… Юмору не место в сообщениях об ошибках]]></title>
	<categories auto="true" type="list" verify="true">
		<item type="str"><![CDATA[Блог компании RUVDS.com]]></item>
		<item type="str"><![CDATA[Программирование]]></item>
		<item type="str"><![CDATA[Интерфейсы]]></item>
		<item type="str"><![CDATA[Usability]]></item>
		<item type="str"><![CDATA[Дизайн]]></item>
	</categories>
	<key_words auto="true" type="list" verify="true">
		<item type="str"><![CDATA[ruvds_статьи]]></item>
		<item type="str"><![CDATA[юмор]]></item>
		<item type="str"><![CDATA[смех]]></item>
		<item type="str"><![CDATA[социальный груминг]]></item>
		<item type="str"><![CDATA[сообщения об ошибках]]></item>
		<item type="str"><![CDATA[Windows 10]]></item>
		<item type="str"><![CDATA[приветствие Windows]]></item>
		<item type="str"><![CDATA[UX]]></item>
		<item type="str"><![CDATA[UI]]></item>
		<item type="str"><![CDATA[дизайн интерфейсов]]></item>
	</key_words>
	<text auto="true" type="str" verify="true"><![CDATA[Сообщения об ошибках — чуть ли не единственное место, где пользователь программы может напрямую пообщаться с её автором. Ну как пообщаться… Ответить он всё равно ничего не сможет. Даже если сильно хочется. А иногда в сообщениях об ошибках такой треш, что действительно очень хочется ответить. Или просто взглянуть в глаза того инженера, который это сочинил.

Например, такой бессмысленный набор слов выдаёт европейская система Trainline при попытке показать на экране железнодорожный билет после получения оплаты:


Ну, это неловко
В заголовках гостя не предоставлен токен

Система приняла деньги, но не смогла выдать билет. Это вообще-то некрасиво. Да и само сообщение толком не объясняет, в чём проблема.

И вишенка на торте. Попытка пошутить в сообщении об ошибке фразой «Ну, это неловко» делает ситуацию ещё хуже.

«Неловко» бывает, когда ты надел майку на левую сторону. А здесь у человека экстренное положение, срочно нужен билет, а вам «неловко». Фраза про токен тоже непонятная — какой токен, зачем? Кто его должен предоставить, что такое «заголовки гостя», кто виноват в сбое, что делать дальше, как мне получить мой билет? Ничего не понятно. Просто нажимай кнопку «ОК» и смирись… Нет, друзья, так современные интерфейсы не делаются.

Неудивительно, что такая ситуация искренне возмутила разработчика. Тут дело не только в том, что он не смог купить билет. Он возмущён непрофессионализмом коллег, которые не справились с коммуникацией.

Разработчиков Trainline можно по-человечески понять. Для них система оформления заказов — это просто программный продукт, над которым они проводят по восемь часов в рабочие дни. С ошибками сталкиваются ежедневно, и это неотъемлемая часть рабочего процесса. Для них обработка ошибок — естественная и совершенно рутинная часть процесса разработки. Наверное, поэтому и возникает желание добавить в серую обыденность ежедневной рутины немножко юмора.

Но для конечного пользователя любая ошибка системы в продакшне — это исключительное явление, крайне редкая ситуация. Они сталкиваются с таким далеко не каждый день, поэтому ситуация воспринимается пользователями совершенно иначе, чем разработчиками «с той стороны».

То есть проектировщики билетной системы банально не подумали о состоянии и эмоциях пользователя, который увидит такое сообщение. Не поставили себя на место юзера. Раздражённый человек готов направить злость куда угодно, это как скопившийся заряд в грозовом облаке. Сообщение об ошибке вызывает негативные эмоции, а шутка в таком сообщении может их только усилить. Представьте, что вам сообщают какую-то плохую новость, сопровождая её шуткой. Первой реакцией будет не смех, а скорее злость из-за неуместного юмора.

▍ Упавшие вкладки

Ещё один пример необычного подбора слов — как Firefox «отмечает» упавшую вкладку (источник):


Междометие «Gah» действительно звучит странно. Не совсем даже понятно, в каких ситуациях оно употребляется в английском языке. Оксфордский словарь говорит, что оно используется для выражения отчаяния и досады. Возможно, на русском к нему ближе всего «Блин!» и «Чёрт побери!».

В любом случае, налицо интеграция просторечной лексики в интерфейс браузера, что не очень правильно. Хотя до шуток не опустились, но всё же…

Пришлось написать небольшой JavaScript, который гарантированно обрушит Firefox, чтобы проверить эту надпись на русском языке. Так вот, в русскоязычной версии никаких отклонений нет, фраза звучит крайне профессионально и дружелюбно:


Совсем другое дело!

На всякий случай я обвалил ещё и Chrome, чтобы оценить профессионализм UX-дизайнеров из компании Google… И не зря это сделал, потому что там обнаружился явный косяк:


Согласитесь, фраза «Опаньки...» немного неуместна, когда вы потеряли текст в веб-редакторе или заявление в консульский центр, которое полчаса заполняли в веб-интерфейсе… А перед этим целый месяц дежурили на веб-странице, чтобы ткнуть на кнопочку раньше других таких же несчастных и занять очередь. Теперь начинай квест сначала… Тут на ум приходит не «опаньки», а совсем другие слова из пласта обсценной лексики в адрес компании Google.

Да и компоновка сообщения в Chrome просто не самая гармоничная. В общем, дизайнерам UX/UI из проекта Chromium есть чему поучиться у коллег из Firefox.

▍ Windows говорит «Привет»

Вдобавок к неуместным шуткам можно добавить неуместную фамильярность. Например, как операционная система Windows 8 и 10 при первой загрузке здоровается «Привет» (в англоязычной версии Hi). Форматируешь диск, ставишь систему, а потом такое слово из темноты:


У некоторых возникли ассоциации с аргонианцами из вселенной The Elder Scrolls, которые тоже любят здороваться подобным образом. Встречаешь такое существо…


и оно вдруг говорит: «Привет!»

Даже немного мурашки поползли по телу…

Справедливости ради отметим, что уже после установки приветственное сообщение в Windows 10 можно изменить на своё усмотрение:


Возвращаясь к аргонианцам… Непонятное и совершенно чуждое существо говорит вам «Привет», словно оно — близкий товарищ или сосед. Такая же неловкость возникает с Windows 10. Перед нами сложнейшая инженерная система, скомпилированная из 3,5 миллиона файлов и 300 ГБ кода, совершенно непонятная внутри (для обычного человека), результат миллионов человеко-часов разработки тысяч инженеров в течение десятилетий — и вдруг панибратское «Привет»… Серьёзно?

Наверное, более подходящим для такой ситуации была бы нейтральная фраза вроде «Добро пожаловать» (Welcome) или «Здравствуйте» (Hello), но почему-то в новой версии Windows выбрали именно «Привет».

▍ Типичные ошибки в сообщениях об ошибках

Поэтому дизайн интерфейсов UX/UI — отдельная профессия. Никто не должен заставлять разработчиков этим заниматься. Писать код и формулировать диалоги для юзеров — совершенно разные активности, они не всегда сочетаются в одном человеке, это как плотничать и сочинять песни.

В общем, здесь профессиональные дизайнеры UX/UI перечисляют типичные ошибки в сообщениях об ошибках (каламбур), которых желательно избегать:
непонятный пользователю технический жаргон («фетчинг», «токен», «куки»),
неуместный тон («Упс! Что-то пошло не так»),
перекладывание вины («Сторонний сайт не отвечает на наши запросы»),
общие фразы («Попробуйте позже»).
Пример сообщения, в котором собраны все эти ошибки:


А вот так их можно исправить:


В принципе, неуместный юмор вписывается во второй пункт списка («неуместный тон»).

▍ Юмор как социальный груминг

Немножко научных гипотез, почему юмор не всегда уместен.

С эволюционной точки зрения юмор у людей — сложная когнитивная функция, которая вызывает смех (физиологическая реакция). В то же время смех обнаружен как минимум у 65 видов животных, хотя учёные пока не нашли доказательств понимания юмора с их стороны.

Согласно одной из гипотез, у животных смех выполняет вспомогательную роль в процессе социального груминга, служит укреплению социальных связей, индикацией свой/чужой, выражением благоприятного расположения, дружбы и т. д.

Научный эксперимент по щекотанию крыс в Берлинском университете им. Гумбольдта

Если гипотеза социального груминга верна, то юмор работает только тогда, когда автор (собеседник) вам приятен. Трудно смеяться над шуткой человека, который вам не нравится. И наоборот, если кто-то смеётся над вашей шуткой — это выражение симпатии. Похоже, так работает психология.

То же самое с софтом. Если нам нравится программа и её автор, то юмор нормально зайдёт. Прикольные названия релизов по именам смешных животных или средний палец в адрес Nvidia — это смешно, потому что мы любим Линуса, а шутка направлена против общего врага и подтверждает понимание общего контекста членами сообщества (мы — они). Но возникновение ошибки или неожиданное падение программы — обычно не та ситуация, когда пользователь готов к восприятию юмора в интерфейсе ПО. Наверное, разработчикам и дизайнерам интерфейсов лучше быть немного сдержаннее в таких ситуациях и сдерживать креативность, которая рвётся наружу. Как писал Кузьма Прутков: «Если у тебя есть фонтан, заткни его, дай отдохнуть и фонтану».

Сообщения об ошибках — очень важная штука. Они определяют дальнейшие действия человека в ситуации, когда он растерян и нуждается в совете.

Telegram-канал с полезностями и уютный чат        бессмысленный набор слов Trainline после получения оплаты      Ну, это неловко
В заголовках гостя не предоставлен токен Ну, это неловко
В заголовках гостя не предоставлен токен Ну, это неловко Ну, это неловко     ещё хуже    ]]></text>
</doc>

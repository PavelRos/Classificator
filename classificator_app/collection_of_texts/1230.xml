<?xml version="1.0" ?>
<doc>
	<label auto="true" type="str" verify="true"><![CDATA[Other]]></label>
	<author auto="true" type="list" verify="true">
		<item type="str"><![CDATA[thenonsense]]></item>
	</author>
	<date auto="true" type="str" verify="true"><![CDATA[2022-06-17, 17:44]]></date>
	<link auto="true" type="str" verify="true"><![CDATA[https://habr.com/ru/post/672050/]]></link>
	<title auto="true" type="str" verify="true"><![CDATA[Интересности для жанра ARPG | Часть 2]]></title>
	<categories auto="true" type="list" verify="true">
		<item type="str"><![CDATA[Разработка игр]]></item>
		<item type="str"><![CDATA[Тестирование игр]]></item>
		<item type="str"><![CDATA[Прототипирование]]></item>
		<item type="str"><![CDATA[Дизайн игр]]></item>
	</categories>
	<key_words auto="true" type="list" verify="true">
		<item type="str"><![CDATA[концепты]]></item>
		<item type="str"><![CDATA[игромеханики]]></item>
		<item type="str"><![CDATA[дизайн игр]]></item>
		<item type="str"><![CDATA[игры]]></item>
		<item type="str"><![CDATA[игростроение]]></item>
		<item type="str"><![CDATA[diablo]]></item>
		<item type="str"><![CDATA[roguelike]]></item>
	</key_words>
	<text auto="true" type="str" verify="true"><![CDATA[Ещё одна подборка некоторых механик для применения в играх типа Diablo.
Первая часть
Концентрированное здоровье
В диаблоидах мне изначально импонирует именно система расходуемых зелий. Не бесконечное зелье, не постоянный встроенный реген здоровья, не лечилки по кулдауну. Поэтому, ориентируясь на реализацию зелий в Diablo 1 и Diablo 2, хотелось бы иметь больше одного вида бутылки здоровья, но и не слишком много. А также немного разнообразить эти самые бутылки, чтобы не было так, что зелье А однозначно хуже зелья Б, а оно в свою очередь всегда хуже зелья В. Вернее сделать все виды бутылок более менее востребованными на любом этапе игры. Эти соображения привели к такой концепции:
Шкала здоровья получает дополнительный параметр - концентрация. Чем выше концентрация, тем насыщеннее цвет шкалы. Концентрация падает с течением времени. От текущей степени насыщенности шкалы здоровья зависит то, как она реагирует на выпитое зелье. Если насыщенность слабая, то здоровье восполняется с некоторой задержкой. Если насыщенность средняя, то здоровье восстановится мгновенно. Если насыщенность близка к предельным значениям, то выпитое зелье дополнительно вызывает эффект регенерации (фиксированное время или пока насыщенность не упадёт до средних значений).
Здоровье низкой концентрации, средней и высокой
Тогда сами зелья, допустим, их будет 3 вида - могут выглядеть следующим образом: простое зелье (не влияющее на концентрацию), среднее (незначительно повышает концентрацию) и сильноконцентрированное (значительно повышающее концентрацию). Таким образом сильноконцентрированные зелья не настолько необходимы, когда концентрации и так хватает - в такие моменты простые зелья становятся актуальнее. Для ещё более сильного сглаживания между степенью полезности различных зелий можно сделать так, что зелья попроще и здоровья прибавляют больше. Например, условно, простое зелье восполнит 50% шкалы, среднее 45%, а сильной концентрации - 40%.
Зелье без влияния на концентрацию, слабого влияния и сильного влияния
По аналогичному принципу могут работать и бутылки/шкала маны.
Для монстров и всяческих ловушек насыщенность шкалы тоже может являться одним из параметров, на которые они могут воздействовать. То есть какие-то монстры наносят повреждения, которые не влияют на концентрацию, а какие-то снижают её тоже. Определённые эффекты ловушек и вражеских заклинаний могут "отравить" концентрацию персонажа, тогда она будет падать намного быстрее. Либо временно "заморозить", мгновенно понизить её, "проклясть" героя (тогда любые зелья не дают концентрации, пока "проклятие" действует).
Ресурсы вместо золота
Здесь по сути имеется в виду разбиение единого универсального ресурса/валюты на отдельные, примерно равноправные виды (когда из этого планируется получить что-то новое для геймплея). То есть это может быть и вариант, с, допустим, делением единого золота на чёрное золото и белое золото. Или отсутствие золота как такового, но наличие каких-нибудь выполняющих его функцию цветных кристаллов - жёлтый, синий, зелёный и так далее.
Отсюда естественным образом вытекает, например, возможность крафта предметов: "для создания предмета N нужны ресурсы A,B и E". Если бы ресурс был единственный, золото, тогда подобный крафт смотрелся бы как покупка предмета у торговца.
Когда есть несколько ресурсов, то они вносят долю разнообразия в падающий с монстров лут. К тому же их можно закрепить за разными монстрами и прочими источниками сокровищ, чтобы добавить глубины игровому процессу - когда игроку нужен тот или иной вид ресурса, то он фокусируется на тех монстрах и источниках, которые его дают.
Опыт не для персонажа
Ввести в игру уровни персонажа - это универсальный хак, который всегда работает, легчайшим образом приносит чувство прогрессии и поддерживает интерес пользователя. Проблемы начинаются когда получение уровней затягивается, перестаёт на что-либо влиять или вовсе остановилось. Опять же в комплекте с подобной уровневостью практически всегда идёт линейность прохождения контента (а вот для того же жанра метроидваний, с нелинейным исследованием уровня и возвращениями в уже посещённые локации, уровневость персонажа как раз не обязательна, часто замещена какими-то находимыми усилениями, увеличением здоровья и собственно, новыми способностями), когда возврат в низкоуровневые места не имеет смысла.
Возможно, стоит вовсе убрать из игры уровни персонажа, сделать их незначительно влияющими на его параметры, сократить количество уровней или сделать систему "перезагрузки", которая так или иначе будет сбрасывать прогресс героя.
Также можно оставить некий получаемый опыт, но направить его не в получение уровней персонажа, а во что-то другое. Например раскачивать не героя, а его предметы и оружие, допустим, улучшая их в определённую сторону, затачивая в определённую стихию, увеличивая шансы попадания или просто приближая момент полного "опознания" предмета (когда выяснение свойств предмета происходит не от применения свитка, а именно раскрывается в процессе ношения предмета).
Предметами и оружием проще манипулировать, чем зашитыми в персонажа уровнями, параметрами и способностями. Они могут ломаться со временем, требовать подзарядки, не работать в определённым местах и ситуациях, против конкретных врагов. Одним словом - эти вещи относительно легко могут быть персонажем потеряны либо заменены, в то время как сбросить возможности зашитые в самого героя - более проблематично.
Получаемый опыт может быть направлен в ещё что-либо специфическое. Например, в получение неких ключей при каждом заполнении полоски, которыми в свою очередь можно открывать какие-то специальные сундуки, разбросанные по локациям. Одним словом, если нужны какие-то вещи, для которых запланирован постепенный гарантированный приход к игроку (в отличие от рандомного дропа с противников, который может долго не приносить нужных вещей или внезапно давать их слишком много), то можно привязать их получение к моментам накопления полоски опыта.
В роли специальных сундуков могут выступать и уже какие-то вскрытые игроком объекты, которые при первом осмотре дают какой-то дроп, раскрываясь не полностью, а по настоящему откроются уже при наличии у персонажа неизрасходованного ключа.
Переселение душ
Развитие предыдущего пункта, один из вариантов "перезагрузки" прогресса персонажа. Что если в качестве основного героя у нас будет некая душа, проживающая скоротечные жизни разных героев, теряющая при их смерти почти всё, но что-то и сохраняющая (хотя бы прогресс в исследовании локаций).
Персонаж, кстати, может тут вполне иметь стандартную уровневую прокачку, в то время как у самой души не будет уровней. Когда текущий персонаж умирает, то можно забыть про его уровни и про его лут - придётся искать другого. Возможно, сразу переселиться в какого-то заранее заготовленного или стандартного низкоуровневого. Возможно, побродить по окрестностям и вселиться в какое-то доступное тело поблизости.
При этом могут возникать дополнительные вопросы - насколько сильно стоит развивать эту сторону игры. Может быть дать душе выходить из тела в любой момент, подыскивая новые тела, и строить геймплей на этом. В таком случае, вероятно, посреди исследуемой местности могут быть некоторые преграды, через которые может пройти только душа, чтобы продвинуться дальше. То есть задача подконтрольного героя может заключаться в том, чтобы донести душу до очередной такой преграды, которую она сможет пересечь и найти себе нового носителя.
ID-способности
Систему заклинаний можно построить на том, чтобы герой находил особые камни, которые может складывать в различные комбинации, получая, например, активируемое заклинание из пары определённых установленных камней.
Это может быть реализовано через систему идентификаторов, которую я пару раз описывал ранее. У каждого камня есть свой идентификатор, когда они участвуют в комбинации, то идентификаторы перемножаются и получаем, как минимум, 9 возможных исходов (по первой цифре результата - от 1 до 9). То есть, если герою доступно одно активируемое заклинание, которое получается от комбинации двух камней, то различные сочетания камней дадут 9 вариантов заклинаний - для простого диаблоида не так уж мало. Если у героя два доступных слота заклинаний (например, одно для левой кнопки мыши, другое для правой), то второе заклинание может иметь свои отдельные 9 вариантов и в сумме получится уже 18 заклинаний для героя (но в каждый момент времени он пользуется только двумя и из разных списков).
Разные пары камней дают разные заклинания
Конечно, эту концепцию можно масштабировать в космические дали, если, например, брать первые две цифры от результата сочетания пары камней. Тогда камней с различными идентификаторами желательно добавить побольше, а вместо 9 исходов получится до 89 (числа от 10 до 99) возможных = 89 разных заклинаний. Но можно ограничиться более простым вариантом - до 9 вариантов заклинаний для каждого слота активного заклинания.
Пассивные способности могут регулироваться теми же камнями и слоты под них тоже могут иметь свои уникальные списки. То есть, допустим, может быть всего 9 доступных пассивных способностей, из которых выбираешь две. Или всего 18, но выбираешь первую пассивную способность из первых 9, и вторую из других 9.
Кроме определения вида заклинания, числа результатов комбинаций камней могут определённым образом влиять на что-то ещё. Например, на форму этого самого заклинания. То есть, имеем результат комбинации 2397, первое число устанавливает заклинание (например, 2 - это огонь), а второе число говорит о форме (например, 1,2,3 - это летящий шар, 4,5 - дыхание в конусе, 7,8 - фрагмент стены, 9,0 - расходящаяся волна).
Враги сами могут иметь идентификаторы и рассчитывать последствия взаимодействия с идентификатором каждого заклинания. К тому же их реакция может быть установлена случайной для каждой новой игры, тогда игроку понадобится выяснять, к чему уязвимы те или иные монстры в каждой конкретной игре.
Эффект воздействия на монстров может быть и общим для них всех, при этом случайным для новой игры, то есть когда в скелета прилетает файерболл, то их идентификаторы умножаются и получается результат, например, 723392. А в текущем глобальном эффекте воздействия первое число 7 означает, например, эффект замедления монстра. Тогда, все такие же файерболлы в этой текущей игре будут всегда замедлять движение скелетов. Если игрок найдёт другие заклинания и монстров, которые тоже при взаимодействии будут выдавать результат начинающийся на 7 - те монстры тоже будут замедляться от таких заклинаний.
В следующей игре, например, первая 7 в результатах взаимодействия заклинаний и монстров будет означать ваншот - мгновенное уничтожение рядового монстра. В то время как первая 2 - уже знакомое замедление, 4 - минимальные повреждения, 5 - эффект отбрасывания, 6 - кровотечение и так далее.
Воздействие эффектов на монстров может быть более тонким. Допустим, монстр запоминает первые две-три цифры каждого взаимодействия с заклинанием и "хранит в памяти" до 7 таких цифр. Тогда можно привязать какие-то эффекты к особенностям этой последовательности. Например, 3-ка "злит" монстра, если в этой последовательности накопится три цифры 3 (можно не подряд, а вобще), то монстр впадает в состояние берсерка. 5-ка, допустим, охлаждает конкретного монстра (пусть это будет некий стихийный элементаль, допустим, водяной) - две 5-ки в последовательности замедляют его, а три - замораживают. В то время как 8-ка того же монстра недраматически разогревает, то есть попавшие в последовательность 8-ки просто нивелируют охлаждающий эффект 5-ки. Или же разогревание тоже может быть драматическим, тогда две 8-ки разгонят элементаля, 3 сделают его кипящим, а 4 испарят. При этом каждая 5-ка тоже нейтрализует одну 8-ку. Ещё один монстр имеет волшебный щит. Допустим, три 7-ки отключают щит, после чего он открывается для эффекта двух 9-к, которые сразу убивают его. Таким образом можно развить эту систему, чтобы и сочетания заклинаний, последовательность их применения, играли роль - вроде того, что первым можно ослабить монстра и добить вторым.
"Органический" инвентарь
В различных диаблоидах и смежных с ними играх обычно фигурирует пара вариантов инвентаря - более "классический", когда предметы занимают разное количество клеток, и "упрощённый", где каждый предмет занимает одну ячейку.
Так вот, придумывая, как мог бы выглядеть инвентарь (трюм) у биомашинки, я вышел на концепцию некоей внутренней "органической" ёмкости, куда нужно компактно укладывать предметы, в то время как стенки этого контейнера прогибаются и деформируются, как бы обволакивая предметы. А когда предмет вынимается - некоторое время стенки контейнера сохраняют его форму.
Суть в следующем - у каждого предмета имеется некая зона влияния на окружающие ячейки инвентаря. От нулевой (тогда предмет занимает 1 ячейку), до 8 клеток (тогда предмет стремится занять все 8 примыкающих ячеек). Когда предмет перекладывается, то помещается в свободную ячейку (не занятую предметом или влиянием предмета), а на примыкающие ячейки распространяется зона его влияния - они становятся не пустыми и в них уже нельзя помещать предметы. Если предмет вынуть, его влияние с этих ячеек пропадает. Что всё это значит? По сути ничего нового - для того чтобы в инвентарь вошло больше предметов нужно перекладывать те, что уже там находятся, стараясь расположить зоны влияния предметов более экономным образом. Отличие в том, что такая перекладка выглядит менее квадратно-гнездовой и очевидной, более свободной, создающей впечатление именно засовывания вещей в рюкзак или мешок, таким образом, чтобы они расположились более компактно.
Предмет слева имеет влияние на 3 клетки рядом с собой (выше, выше и правее и правую). Поместим два таких предмета в инвентарь размером 4 на 4 клетки. Тот, что в центре - занял 4 клетки, свою и те, что заблокированы теперь его влиянием. Предмет вверху занял всего одну клетку, так как его влияние не затронуло прочие ячейки. Если расположить центральный предмет левее или ниже того, что в углу, то его влияние тоже частично уйдёт за пределы инвентаря, частично "наложится" на занятую другим предметом клетку. 
К этой концепции можно прийти просто программируя инвентарь "классического" диаблоида - там на самом деле работает схожий принцип, просто правила немного другие. Перемещаемый предмет обладает такой же зоной влияния, но распространяющейся не вокруг, а вправо в вниз от корневой ячейки. Кроме этого там предмет не может быть перемещён, если в эту зону влияния хотя бы что-то попадает - она вся должна быть не занята. В "органическом" инвентаре, напротив, неважно, что окажется в зоне влияния - предмет может быть установлен в любую свободную ячейку, не занятую предметами или влиянием других предметов.
Примеры реализации
Пользуясь фреймворком PlayCanvas я задумал собрать прототип простенького диаблоида, в том числе использовав там некоторые задумки из первой части механик для ARPG.
Замечу, что условным эталонным диаблоидом лично для меня является всё-таки первая Diablo, притом консольная версия, где двигаться нужно было стрелочками, а не мышкой. Поэтому диаблоиды на ПК мне обычно не слишком нравятся (включая D1 и D2) уже хотя бы по причине просто сумасшедшей нагрузки на мышь (вернее на кисть правой руки, бог с ней с мышью), с этими микроприцеливаниями во всё подряд. Руки должны быть равномерно загружены, а мышь должна знать своё место. Допустим, в League of Legends (путь это и не диаблоид) мышь используется довольно интенсивно, но сверхточные клики мышью не требуются, а нагрузка более менее распределена по обоим рукам, в то время как от управления Path of Exile и прочих "классических" представителей arpg жанра устаёшь довольно быстро.
Конечно, у первой Diablo много своих недостатков, например, на той же консоли было сложно заходить в инвентарь, устанавливать заклинания, сохраняться/загружаться, покупка товаров через список довольно неудобна, ещё какие-то мелочи. Но уже ко 2-й части многое хорошее куда-то выветрилось и более не возвращалось в серию. Например, сама концепция исследования подземелий/этажей, что мне очень нравится, в отличие от беготни по всяким полупустым полям/степям с заходами в неглубокие (как новосибирское метро) мини-подземельями. Магические книжки находить интереснее, чем тыкать фиксированные навыки в дереве прокачки. Нет такого огромного перегруза лишними вещами/параметрами/союзниками, как в D2. Одним словом, при всех несовершенствах интерфейса, сама базовая формула первой Diablo мне как-то больше импонирует и если на что и хотелось ориентироваться, то куда-то в ту сторону.
Итак, проект Chaosborn. Сюжет (если это можно назвать сюжетом) в том, что герой просыпается/воскресает в некоем подземелье, выбираясь из саркофага. И начинает свой путь по подземелью, постепенно выбираясь на этажи повыше.
Chaosborn
thenonsense.itch.io
Здесь я ориентировался на упоминавшуюся в первой части arpg-интересностей концепцию внеземной пирамиды, по этажам которой герой продвигается не вниз, а вверх. Также герой не привязан к некоей базе, типичной для диаблоидов - некуда вернуться и продать/купить предметы. Тем не менее, он может разбирать находимые им вещи на фрагменты. Чтобы позднее из фрагментов собирать какие-то полезности, например, те же зелья маны/жизни. Для сборки нужны свитки с рецептами. Вернее я сделал таким образом, что все рецепты доступны сразу (хотя в демо их доступно мало), в отдельном меню, но поначалу закблокированы, а открывать их можно за такую валюту как универсальные свитки (редкий дроп с монстров и прочих источников лута).
Концепция с душами здесь тоже присутствует и выглядит следующим образом: путешествуя по подземелью герой иногда находит прочие саркофаги, в которых кто-то лежит (помимо тех, из которых просто выпадает лут). Если герой умирает, то игрок переносится в одного из ранее найденных героев, которые воскресают в своих саркофагах. У них свой пустой инвентарь, но накопленные фрагменты, свитки и разблокированные рецепты переносятся, плюс начисляется некоторое количество бонусных фрагментов.
Используются зелья маны и здоровья, по одному виду бутылок для каждого ресурса. Применяются нажатием на символизирующие их кнопки - расходуется первая попавшаяся бутылка такого типа в инвентаре.
Предметы экипировки сделаны простыми, без дополнительных свойств, с фиксированными бонусами. Это несколько разновидностей предметов для слота маски, для слота артефакта и в слот кольца.
Открытый инвентарь и слоты экипировки.
Что касается оружия - с ним всё сложнее. Герой у нас в целом чисто маг (да, вот так вот ультимативно - ну нравится мне играть в диаблоиды исключительно магами и прочими подходящими на их роль) и может стрелять простеньким слабым заклинанием без всяких проблем и без траты маны, правда оно очень медленно и недалеко летит. Если экипировать специальное хаотическое оружие, то выстрелы становятся более мощными, но расходуют ману. При этом выстрелы каждого конкретного хаотического оружия видоизменяются, в зависимости от скрытых внутри него комбинаций - наносят урон разными "стихиями", ускоряются, замедляются, становятся двойными, расходуют больше/меньше маны, замедляют или поджигают врагов.
При уничтожении врагов из них вылетают недолговечные искры, если поймать такую искру, то она втянется текущим экипированным хаотическим оружием, заняв одну из 9 его ячеек. Каждая вертикальная колонка из ячеек отвечает за какое-то свойство (модификатор) выстрела. Всего у выстрела 3 модификатора, они поочерёдно открываются и меняются по мере накопления оружием искр. Таким образом, побегав с оружием какое-то время, лишаешь его скрытых тайн и хаотичности, фиксируя эффекты. Но это ещё не всё, после накопления искр через некоторое количество выстрелов хаотическое оружие ломается, оставляя кристаллы-заряды определённой стихии.
Справа внизу видно, что в текущем оружии собрано 4 искры.
Что же это за заряды такие? Дело в том, что имеется ещё такой вид оружия как жезлы. Если экипировать жезл, то он постреливает встроенной слабой магией, которая не тратит маны. Но в жезл также встроены пара заклинаний (огненный шар и молнии), которые расходуют не ману, а те самые кристаллы-заряды. Таким образом предполагается, что игрок периодически экипирует герою хаотическое оружие, ловит в него искры, а когда то оружие разрушается, то может иногда постреливать из жезла накопившимися зарядами.
По сути в хаотическом оружии как раз действует система умножения идентификаторов, но в несколько упрощённом виде. Также это похоже на концепт Куба с дарами из первой статьи, однако тот Куб планировался как вариант полной замены инвентаря вобще, в то время как в этом проекте мне захотелось иметь более развёрнутого (классического) вида инвентарь и концепцию Куба пришлось несколько переделать.
В другом прототипе, Wild Engines, используется концепт ID-способностей - машинка подбирает в свой ограниченный инвентарь-рулетку разные предметы и, в зависимости от выставленной комбинации первых двух предметов, получает то или иное активируемое заклинание. Играбельное демо с этой механикой я пока не собирал, а в старой демоверсии этого проекта такой механики ещё нет. В целом это заготовка под такой некоторый "диаблоид на колёсах". Кто сказал, что машинки не могут быть магами и зачищать "подземелья"?
В инвентаре-рулетке справа выставлена комбинация предметов (верхнее поле), дающая машинке способность дышать огнём. Кнопки по бокам вертят колонки предметов. Кнопки внизу выкидывают предметы из соответствующей колонки в игровой мир (кроме самого верхнего предмета). Подбираемые предметы помещаются в свободные позиции инвентаря-рулетки (но не в верхние поля, куда предмет можно только прокрутить боковыми кнопками).
Ещё один прототип, Neverdrome (на этот раз с демоверсией), демонстрирует работу упоминаемого в статье Органического инвентаря (хотя он тут довольно малого размера). Там присутствует ещё одна особенность - влияние предмета снимается немного упрощённым алгоритмом и иногда возникает эффект освобождения лишнего места, поэтому не только порядок укладки, но и последующие перекладки предметов тоже начинают играть свою роль.
Neverdrome
thenonsense.itch.io
В окне инвентаря (9 ячеек слева) находятся два предмета с полной областью влияния (на все 8 окружающих их клеток). Ячейки заблокированные их областями влияния отмечены "паутиной".
Ну и на этом всё на сегодня. Ещё одна подборка некоторых механик для применения в играх типа Diablo. Первая часть Первая часть Концентрированное здоровье В диаблоидах мне изначально импонирует именно система расходуемых зелий. Не бесконечное зелье, не постоянный встроенный реген здоровья, не лечилки по кулдауну. Поэтому, ориентируясь на реализацию зелий в Diablo 1 и Diablo 2, хотелось бы иметь больше одного вида бутылки здоровья, но и не слишком много. А также немного разнообразить эти самые бутылки, чтобы не было так, что зелье А однозначно хуже зелья Б, а оно в свою очередь всегда хуже зелья В. Вернее сделать все виды бутылок более менее востребованными на любом этапе игры. Эти соображения привели к такой концепции: Шкала здоровья получает дополнительный параметр - концентрация. Чем выше концентрация, тем насыщеннее цвет шкалы. Концентрация падает с течением времени. От текущей степени насыщенности шкалы здоровья зависит то, как она реагирует на выпитое зелье. Если насыщенность слабая, то здоровье восполняется с некоторой задержкой. Если насыщенность средняя, то здоровье восстановится мгновенно. Если насыщенность близка к предельным значениям, то выпитое зелье дополнительно вызывает эффект регенерации (фиксированное время или пока насыщенность не упадёт до средних значений).  Здоровье низкой концентрации, средней и высокой Тогда сами зелья, допустим, их будет 3 вида - могут выглядеть следующим образом: простое зелье (не влияющее на концентрацию), среднее (незначительно повышает концентрацию) и сильноконцентрированное (значительно повышающее концентрацию). Таким образом сильноконцентрированные зелья не настолько необходимы, когда концентрации и так хватает - в такие моменты простые зелья становятся актуальнее. Для ещё более сильного сглаживания между степенью полезности различных зелий можно сделать так, что зелья попроще и здоровья прибавляют больше. Например, условно, простое зелье восполнит 50% шкалы, среднее 45%, а сильной концентрации - 40%. Зелье без влияния на концентрацию, слабого влияния и сильного влияния]]></text>
</doc>

<?xml version="1.0" ?>
<doc>
	<label auto="true" type="str" verify="true"><![CDATA[Other]]></label>
	<author auto="true" type="list" verify="true">
		<item type="str"><![CDATA[VasiliySkobelev]]></item>
	</author>
	<date auto="true" type="str" verify="true"><![CDATA[2022-07-01, 11:00]]></date>
	<link auto="true" type="str" verify="true"><![CDATA[https://habr.com/ru/company/pixonic/blog/674388/]]></link>
	<title auto="true" type="str" verify="true"><![CDATA[Вопросы о левел-дизайне: о чем молчат дизайнеры локаций]]></title>
	<categories auto="true" type="list" verify="true">
		<item type="str"><![CDATA[Блог компании Pixonic]]></item>
		<item type="str"><![CDATA[Разработка игр]]></item>
		<item type="str"><![CDATA[Дизайн игр]]></item>
		<item type="str"><![CDATA[Игры и игровые консоли]]></item>
	</categories>
	<key_words auto="true" type="list" verify="true">
		<item type="str"><![CDATA[gamedev]]></item>
		<item type="str"><![CDATA[level design]]></item>
	</key_words>
	<text auto="true" type="str" verify="true"><![CDATA[Я уже долго занимаюсь популяризацией левел-дизайна. Преподаю на курсах, выступаю на конференциях, провожу живые стримы и мастер-классы с вопросами и ответами, участвую в подкастах, пишу статьи, веду блог, редактирую книги. За все это время читатели и слушатели задавали мне множество нетривиальных вопросов, над некоторыми из которых я бы, пожалуй, иначе и не задумался, а какие-то попросту не смогли органично влиться ни в одну из предыдущих статей или лекций — слишком уж специфические.
Эта статья — дополнение к моему циклу. В ней я поговорю обо всем не вошедшем в более ранние публикации. Снова поговорим об идеальном левел-дизайне, обо всем процессе разработки локации, какими навыками должен обладать левел-дизайнер и что уметь, и еще обо многом другом.
Предыдущие статьи из цикла:
Левел-дизайн 101: язык разработки локаций
К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна
Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты
Об идеальном левел-дизайне
Какая игра для тебя эталон геймдизайна? 
Геймдизайн — слишком широкое понятие. Если вы хотите посмотреть именно крутой дизайн локаций, обязательно прошерстите чуть ли не весь портфель студии Arkane Studios. У них есть абсолютно потрясающие решения, гайдлайны, по которым они собирают локации. Плюс, очень интересно бывает послушать, когда они выкладывают материалы на тему того, на каких столпах они в принципе строили дизайн. Если кто-то играл, например, в перезапущенный Prey от них же, можете сейчас припомнить — барабанная дробь — что во всей игре нет вертикальных лестниц, ни одной.
Они изначально пришли к выводу, что им не нравится пустой игровой опыт, когда игрок просто «пылесосит» стенку на вертикальной лестнице. И они решили строить все перепады высот, все элевации так, чтобы можно было их пройти без вертикальных лестниц. Таких моментов у них достаточно много.
Плюс, если кто играл во второй Dishonored, там, конечно, все вспоминают теплым словом особняк Джиндоша — тот самый Clockwork Mansion. Кто не играл — это особняк с кучей сложных трансформирующихся комнат, которые полностью меняют топологию окружения. Но, на мой взгляд, не это самое интересное. Там дальше есть место, где персонаж получает в руки стеклышко, через которое он видит ту же самую локацию в другом временном промежутке. И буквально вот так просто, по нажатию одной клавиши, он переносится во времени. 
По сути, что мы имеем? У нас в памяти лежит аж три версии локации, которые функционируют одновременно, потому что через это стеклышко мы видим еще и противников, которые там перемещаются. И Arkane были одними из первых, кто в принципе пошел на такой эксперимент.
В Dishonored интересно играть и через стелс, и месить все вокруг. На самом деле, в Dishonored — отдельно поясню для интересующихся — есть одна проблема, свойственная для всех immersive sim. Ее лучше осознать раньше, чем позже. Игра претендует на то, чтобы поддерживать кучу стилей игры, но, на самом деле, большинство immersive sim  подразумевают один эффективный билд, который просто позволяет тебе дотянуться до всех доступных локаций. Если вспомнить, например, Deus Ex, то да, ты сперва можешь найти дверь, которая требует прокачать ручки на 8, и без этого ты не пройдешь дальше. От этого ты испытываешь некую фрустрацию, а потом находишь вентиляцию где-то рядышком и таки попадаешь за эту дверь. А потом ты видишь, что, чтобы на самом деле исследовать все-все-все доступные локации, тебе нужно иметь: взлом на трешечку, ручки на четверочку и так далее. Здесь уже может не быть реиграбельности, ведь в силу вступает мета, которая подразумевает один-единственный эффективный билд. В Dishonored похожая ситуация, ведь в общем случае идти в лобовое столкновение куда менее выгодно, чем прокачать телепорт или, например, замедление времени, и по одному чикать противников.
Есть еще, конечно, второй Titanfall. К слову, там отличный и геймдизайн, и левел-дизайн. Там есть абсолютно потрясающая локация — тоже с путешествиями во времени прямо во время паркура. Это очень круто. А чего стоит локация с конвейером, который собирает по кусочкам модульные земельные участки. В общем, не буду спойлерить — пройдите, не пожалеете.
А еще — Cyberpunk 2077. Несмотря на все недостатки игры, я считаю, что там отлично сделан город. Очень жалко то, что он не дошел до релиза в том виде, в котором изначально планировался: как минимум, есть еще ярус метро, который сильно порезали. 
Мне нравится и то, что в игре отдано приличное место под механику автомобиля: он там все-таки не такой рудиментарный, как мог бы быть. Но мне кажется, что там есть достаточно серьезные проблемы с боевкой, потому что зачастую, во-первых, не все билды эффективно могут пройти те или иные боевые столкновения, и во-вторых, далеко не везде общие принципы левел-дизайна работают. Во всех крупных проектах есть такие моменты, когда были какие-то изменения в процессе продакшна, которые требовали переработки на всех локациях. И не везде все успели поправить. Там есть симптомы таких вещей.
Я его прошел, видел все концовки. Кто терпим к текущим багам — рекомендую. Самый стабильный клиент сейчас, как ни странно, на ПК.
Карты для MOBA-игр, например, DOTA — они очень старые и очень похожи друг на друга. Это примеры идеального дизайна или просто традиция?
И да, и нет. Сперва я сделаю реверанс в сторону того, что в подобных играх зачастую карта одна, и это исторически выросло из того, что, например, если взять какой-нибудь Call of Duty пятилетней давности, у него может быть 18 сетевых режимов, а про количество карт я вообще молчу. И большинство из них отмирает сразу после пика продаж. Чем меньше режимов, тем больше на них играют. По логике одной карты — на ней всегда будут играть.
Почему они именно такие? Тут одновременно и ошибка выжившего, и везение, и действительно хороший дизайн — потому что в той же DOTA это классический «клевер», трехлайновая локация (с раками на миде, конечно же). Она достаточно равновесная, понятная, легко меморизируемая. Это сделано не просто так и не за один день, и это дизайн, который работает. Даже в шутерах от первого лица зачастую референсят дотовую карту и делают двух-трехлайновую локацию с понятным сочетанием сегментов. На самом деле, если вы, например, посмотрите на карту DOTA, а потом на, простите, DE_Dust2 из Counter-Strike, вы увидите несколько пересечений.
Какие самые необычные решения ты встречал в левел-дизайне — например, как Silent Hill 2 со своим туманом?
Хороший вопрос. Как я уже говорил, это путешествие во времени прямо во время паркура в Titanfall 2 и сборка локации по конвейеру в нем же. Что бы такого еще интересного? Например, из недавнего дополнения Psycho Krieg для Borderlands 3 — там абсолютно потрясающий левел-дизайн. От и до все дополнение — просто пушка. Крайне творчески подошли ребята. Не буду рассказывать в деталях — это все будет спойлерами. Я оставлю один из снимков своего прохождения, но, думаю, вы даже не поймете, где здесь верх, а где — низ.
Плюс, если хотите очень крутой левел-дизайн, который еще и опирается на то, как его проходит игрок, внезапно — это кампания к последнему Call of Duty, которая Black Ops Cold War. Последние 2-3 локации перестраиваются на ходу в зависимости от решений игрока. Снимаю шляпу: так круто давно никто не делал.
От концепта до плейтестов — все о разработке локаций
С чего начинается разработка уровня?
На одном из курсов я рассказывал, что пайплайны производства уровней бывают разные, и это очень сильно зависит от студии. Когда левел-дизайнер приходит и говорит: «У меня есть идея, я сейчас покажу ее на блокауте», — это сферический конь в вакууме. Хорошо, когда есть такая возможность — для левел-дизайнера это потрясающая точка роста с максимальной ответственностью за результат, потому что с него начинается продакшен. Потом могут начать концептирование с абсолютно разных этапов. Но бывает и наоборот: особо крупные игроки на рынке могут начать с концептов, когда они ищут дирекшн. 
Бывают те, кто начинают сразу с арт-пассов: везут художников по нужным локациям и затем сажают их за работу. Желательно, чтобы с ними вместе были и арт-директора, и вообще все, кто высказывает затем свое мнение. Взять, например, Red Dead Redemption — сначала там готовили карту мира с идентичной архитектурой, всевозможными оммажами на Лос-Анджелес и не только, после чего уже приглашали дизайнера, чтобы сделать из этого игру. 
Нужно, чтобы был человек, который решает, что в игре важнее: графика, геймплей или что-то еще. Это не значит, что они должны воевать друг с другом. Если важнее графика, сначала вы делаете визуал и пытаетесь его сохранить, не сломав его на игровом оперировании. Если важнее геймплей, сначала вы все делаете на гибких инструментах с очень примитивной графикой, которая легко итерируется в течение дня по несколько раз.
Почему фаза концептирования так важна?
Чувствую, нужно пояснить одну важную вещь. Я бы не называл концептами блокаут, потому что одно дело, когда левел-дизайнера попросили накидать «концепт», потому что в большинстве случаев он будет некрасивым, если это самая-самая первая итерация, и левел-дизайнер приносит драфт. Он может не играться, он может плохо выглядеть, но по нему будет понятна макро-топология, как расположены пути, как будет работать навигация, где будут точки схождения и так далее. Но это все равно будет блокаут, т. к. задачей левел-дизайнера был и остается прототип игрового процесса, а не внешнего вида.
Совсем другая история — концепты художественные, на которых нанимают специальных художников. Причем идеально, когда эти ребята работают не только в 2D, а могут экспортировать сцену, покрутить свет и после этого сделать скриншоты, перенести их в Photoshop и там дорисовать. Концепты могут быть либо после игрового итерирования — если говорить о совсем трендовых пайпах, левел-дизайнеры могут работать и параллельно с концепт-художниками. Макро-топология не меняется, и концепт-художники сразу берут ее за основу, показывая, что из этого можно сделать визуально. Когда концепты состоялись и прошли арт-дирекшн, начинается арт-пасс, где и геймплей уже готов, и понятно, куда двигаться визуально. 
Нужно ли мне как левел-дизайнеру расставлять мелкие камни, лужи и т. д.?
Действительно, есть парадигма, что чем больше вы умеете, тем более вы можете быть полезным на проекте. Но суть в том, что если эта лужа не влияет на геймплей, и уровень от этого не становится интереснее, это не ваша работа. Геймдизайнер уровней отвечает на вопрос, насколько интересно уровень играется, а уже художник отвечает за то, как оно выглядит. Если у вас вода замедляет персонажа или активирует плавание, конечно, это ваша задача — ее поставить. Если вам нужна лужа только для того, чтобы от нее свет отражался — это работа артиста.
По сути, можно дорабатывать карту бесконечно долго, но когда вы понимаете, что нужно остановиться, что карта готова?
Я бы рекомендовал в продакшене потратить время на то, чтобы четко обозначить, при каких условиях локация считается готовой, сданной. Потому что, если у вас идет проект, и сданных локаций нет, значит, вы что-то делаете совсем не так. Локации все параллельно не могут разрабатываться до релиза. Это чушь. Вы выстрелите себе в ногу в таком случае. Упростите себе жизнь и отчеркните, что вы геймплейно считаете локацию завершенной, когда она отвечает таким-то требованиям, после чего обращайтесь к левел-дизайнеру только для того, чтобы восстановить или поддержать геймплей этой локации. И работайте уже с артом, чтобы локация отвечала артовым требованиям.
Хорошо, когда есть ведущий левел-дизайнер или ведущий геймдизайнер, который принимает локации и говорит: «Вот LD-пасс готов. Следующие LD-пассы будут рудиментарны, только на поддержку». Хорошо, когда есть арт-директор или арт-продюсер, который говорит: «Артовая локация готова. Если в ней что-то будет меняться, мы будем просто перепекать цвет и навигацию».
Может ли художник «сломать» мой уровень?
Не стоит надеяться на то, что ваш продукт, попав в другой отдел, обязательно сохранит все, что вы от него ожидаете. У людей есть свои хотелки, свои руководители, которые тоже могут расходиться во мнениях. Вам не нужно договариваться о том, что никто ничего не ломает — вам нужно договориться о том, в каких рамках вы ломаете. Я отдаю уровень и говорю: «Этот объект ломай как угодно, мне неважно, какой он будет формы. А это — артовая доминанта, мне неважно, как она будет выглядеть, но она должна быть видна откуда угодно». 
Мы отвечаем за функционал. Визуал — это задача художника, и, естественно, все, к кому в руки попадает карта, так или иначе ее меняют — нужно только договориться, как.
Как узнать, насколько игрокам нравится уровень?
Плейтесты, плейтесты и еще раз плейтесты. Сперва внутри команды, потом внутри студии, потом на чуть более широкую аудиторию — какую-то тестовую группу, — а потом уже, например, всякие софт-лончи, ЗБТ и так далее. Дайте поиграть тому, кто наименее ангажирован, и кто не разработчик. Дайте поиграть своей бабушке, маме или кому-то другому из близких, далекому от игр. Посмотрите, как внезапно на них работают все эти базовые принципы левел-дизайна: куда падает взгляд, куда они движутся.
Разный левел-дизайн
Отличается ли сложность разработки 2D- и 3D-локации? 
Да, безусловно. Хотя я бы разделил здесь все-таки даже на три категории: 
первая — это в принципе 2D-игры,  
вторая — то, что раньше было модно называть 2,5D. То есть, когда у тебя геймплей происходит в плоскости, но на самом деле игра трехмерная. Например, Duke Nukem: Manhattan Project — очень наглядный пример подобного жанра, 
3D-игры, у которых перемещение уже по всем трем осям — будь это от третьего лица или от первого. 
Если вспомнить на моем личном примере, то, когда мы делали локации для Vector, там были свои нюансы, там были свои сложности, эксклюзивные, которые потом не повторились в 3D-играх. То есть, у нас, например, были заднички по параллаксу, которые смещались в процессе перемещения персонажа. У нас были различные силуэтки, которые лепились из разных спрайтов, разных ассетов. То есть, там не весь арт уникален, какой-то из них совмещен. Плюс, там у нас, как в супер-старых движках, коллайдеры — физические сущности, с которыми взаимодействует персонаж игрока, — и графика были отдельными сущностями. Нам их приходилось расставлять отдельно. В современных 3D-играх это, как правило, объединенная сущность, то есть, коллайдер и графика — один объект. И так уже достаточно давно. 
В 3D играх независимо от того, какая у тебя перспектива камеры, геймплей сбоку или сверху, в изометрии от первого лица или от третьего, — есть много нюансов, которые в 2D-играх — например, Ori — не существуют как класс. Скажем, запекание света, работа с перспективой и так далее.
Тяжелее работать над дизайном уровней в случае уровней с рандомной генерацией или же с постоянными уровнями?
Отличный вопрос, мало кто им задается. Я работал с процедурной генерацией на Vector 2, и нагрузка на левел-дизайн была многократно выше, чем на приквеле. Многократно. 
Давайте развеем сразу один очень стоический миф: процедурная генерация не означает, что у вас есть волшебная фея, которая сидит и по заданным условиям генерирует локации, которые играются и хорошо выглядят. Это не так работает. В процедурной генерации у вас есть сегменты уровней, которые должны между собой сочетаться и должны играться. Желательно с минимальным количеством ограничений, чтобы вы могли их поставить в любой последовательности, чтобы они идеально друг с другом соединялись. При этом обеспечивается стабильный пэйсинг. В том же Vector 2 у нас был достаточно суровый генератор с кучей, кучей, кучей условий. Там каждый забег — это несколько этажей. Каждый этаж — это примерно девять комнат, условно комнат, то есть — помещений с входом и выходом. И внутри каждой комнаты у нас было разное количество сегментов — как минимум два: старт и финиш. По-моему, и четыре было: старт, миддл 1, миддл 2 и финиш. И в каждом из этих сегментов у нас было в среднем десять вариантов. И каждый из них должен был сочетаться с каждым из следующих. Представляете такое дизайнить, да?
Вот плохой и хороший пример того, как в принципе работает процедурка — или, скажем так, наглядные примеры того, как работает процедурка.
Плохой — это No Man’s Sky на релизе. Сейчас он нормальный, но на релизе было не очень. У них была стандартная ошибка игр с процедурной генерацией: 80% классного контента идет в последних 20% прогресса. Кто доходил до центра галактики, видел бомбические вещи, которые были в трейлерах — а те, кто не дошел до туда, ощутили больше фрустрации, чем контента.
Отличный пример процедурной генерации — это Remnant: From the Ashes. Каждый биом в каждом прохождении перетасовывается сегментарно, выбираются боссы, то есть — в одном прохождении вы всех противников не увидите. И генератор там устроен так, что если вы проходите соло и параллельно еще периодически подключаетесь к другу и помогаете ему пройти те же локации — только тогда вы увидите весь контент. Потому что его там достаточно как минимум на два разных прохождения. И генератор там учитывает, какие боссы сгенерировались у вас, какие сгенерировались у вашего товарища. Там просто бомбически сделано. Очень рекомендую посмотреть.
Как разработать открытый мир? На что стоит обратить внимание?
Допустим, у нас есть условная проекция с открытым миром — давайте сразу обозначим, что это такое. Технически это не одна большая карта, а мозаика из кучи карт-плиток. Причем в первую очередь это плитка по лэндскейпу, и на ней еще расставляются точки интереса. Это много маленьких локаций — то есть, те, кто говорит, что в Fortnite это все одна карта, в корне не правы: карт там много, они просто распилены по матрице, и нагрузка на разработчиков там не сильно меньше, чем при разработке одиночной игры с кучей последовательных уровней.
На что обратить внимание? Во-первых, когда вам заказывают такую штуку, проверьте свою медицинскую страховку и что в нее входит, потому что не все проходят это испытание. По поводу конструктора и автоматизации — очень часто сейчас на игровом рынке требуют от дизайнеров сразу делать красиво. Не ведитесь. Локация должна подаваться для быстрого итерирования. 
Если говорить о совсем высокоуровневых вещах, где вы распределяете точки интереса по карте, есть условное «правило треугольника», когда в любой точке мира персонаж стоит, и вокруг горизонт должны нарушать две-три локации, которые транслируют разный геймплей. До того, как начинать полноценный продакшн точек интереса, желательно взять карту, разметить ее и посмотреть, сколько вам их вообще в идеале нужно — понять минимум, и его желательно сначала довести и собрать воедино руками. И желательно не двумя руками — не одного лида, а нескольких дизайнеров по имплементации этого контента. Важно также избежать перенасыщения контентом и не забить на пайплайн.
Открытые миры — это высший пилотаж, если их делать хорошо. Потому что это матричная структура локаций, где ты не можешь гарантировать, куда пойдет игрок, и должен делать ее максимально интересной независимо от маршрута. Это очень нетривиальная задача. На мой взгляд, с этим очень неплохо справились относительно недавние релизы как Assassin’s Creed: Valhalla и Ghost of Tsushima. Встречаемость событий выверена будто «по линейке»: в какую сторону ни иди, всегда случится приключение.
Идеальный левел-дизайнер — кто он?
Насколько в современных реалиях востребован отдельный левел-дизайнер, и должен ли он уметь что-то еще: концепт-арт, 3D, геймдизайн?
Я сперва отвечу про ситуацию на рынке. На рынке нет дефицита левел-дизайнеров. Как ни парадоксально, есть дефицит специалистов, которые их принимают и проверяют. Общего понимания, как принимать на работу левел-дизайнера, сейчас очень мало что на рынке СНГ, что на западном. 
К сожалению, если на LinkedIn вы разместите резюме и повесите отметку «Open for opportunities», будут встречаться рекрутеры с вопросом: «А где ваш ArtStation?» И вы такой: «Но я же левел-дизайнер». После этого начинается интереснейший разговор: все привыкли по примеру западных студий, которые страдают от большого количества атавизмов сейчас, что у левел-дизайнеров должны быть статичные скриншоты в портфолио. Отсюда делается автоматический вывод, что они должны быть красивые. Да, скриншоты могут быть, но из них должна быть понятна топология, навигация, как локация выглядит с перспективы персонажа игрока, а не насколько она «красивая». В идеальном сценарии должно быть прохождение, а еще лучше — билд. Такие соискатели есть, им просто нужно качаться в этом направлении. 
Я бы посоветовал, ориентируясь на требования студий типа Insomniac, Arkane и т. д., смотреть не в сторону арта, а все-таки в визуальное скриптование, чтобы собирать полноценный игровой опыт. Тогда отдельно вам куча звездочек в карму упадет, когда вы, например, впишетесь в препродакшн проекта, и вы сможете не дергать постоянно инженерный отдел, чтобы реализовать какую-то игровую механику. Она будет кривая, косая, на костылях, но мы сможем ее попробовать. И это хорошо помогает и спасает на любом проекте.
А насколько востребован сейчас чистый левел-дизайн?
Часто приходят с вопросами: «Может, мне немного переобуться? Артить начать, поучиться свету?» Это можно сделать, и очень часто требуют, чтобы левел-дизайнер еще и дрессил, артил, энвир делал. Но если вы считаете, что вас должны взять как левел-дизайнера, то вас должны взять как левел-дизайнера и только как левел-дизайнера.
Что вы сделали для того, чтобы ваш идеальный работодатель узнал о вашем существовании? Очень много людей, как правило, ничего для этого не делают. Общайтесь с людьми из индустрии. Спрашивайте людей из конкретной студии. Может быть, слоты еще не вывесили или есть неанонсированный проект. Гните свою линию, и рано или поздно вы найдете свою вакансию.
Еще важный момент: многие считают, что сперва нужно наработать определенного объема портфель, прежде чем куда-то вообще пробоваться. Бомбите лучше сразу работодателей, потому что иначе вы можете пропустить момент, когда слот открыт. Можно просто вертеться в индустрии без кумовства и сарафанного радио и без открытого портфеля вообще — я этому живой пример. Когда вы показываете, на каких проектах вы работали, и говорите: «Если что, я готов сделать для вас тест», вы его делаете, и всех все устраивает — вопросов ноль. Как правило, работодатель, который реально ищет и у которого реально есть запрос на дизайнера, обязательно даст вам тестовое. 
Разработка освещения — это задача левел-дизайнера или уже арт?
Это арт. Но я очень рекомендую левел-дизайнерам хотя бы понимать, как строится свет. То есть, если вы работаете с Unreal Engine, вам стоит понимать, что такое, например, мобильность лайтов, почему они статичные (stationary) и moveable, какое ограничение в движке на количество одновременно присутствующих на локации moveable лайтов, как запекается свет, что такое статическая световая карта и объемная, и как поставить свет на блокауте так, чтобы локация игралась и была читаемой.
Это основное. Но если вы делаете блокаут интерьерной локации, и она черная, потому что в ней нет источника света — это ваша проблема, а не художника по освещению. Ваша задача — предоставить дизайн, который можно будет поиграть, понять без «Википедии» и без привлечения отдельных художников. Плюс, если вы понимаете, как это технически устроено в движке, вы сможете помогать арт-отделу на многих этапах и в целом быть достаточно полезным специалистом. Очень рекомендую. Мне самому это достаточно хорошо помогло в карьере.
Нужно ли концепт-художнику разбираться в левел-дизайне?
Это та же история про то, в каких рамках вы договорились «сломать» локацию. Концепт-художники, как правило, не работают напрямую с игровым контентом, а просто берут его как референс и на его основе уже делают концепты. Желательно вести диалог. Это в локации очень важный элемент. 
В самом левел-дизайне, я думаю, не так критично. Мультистаночник, который делает и игровой дизайн, если это художник — ему все навыки полезны, но главное, чтобы концептирование было на высоте.
Насколько глубоко левел-дизайнеру нужно разбираться в психологии игрока?
Базовые принципы левел-дизайна — они как разметка на дороге. Они не приковывают тебя к батарее, а указывают путь и отвечают за то, чтобы твое внимание как игрока отвести в нужную сторону. Как работать с мотивацией человека через визуальный ряд — надо понимать. Все заходят на это поле с разных сторон. Кто-то, например, профессиональный архитектор. Кто-то изучает основы фотографии, и им тоже проще работать в этой позиции.
Если коротко — да, базовые основы, как можно удержать внимание игрока, понимать стоит. Но для этого не обязательно получать академическое образование. Стоит просто играть в игры — особенно того жанра, который вы хотите разрабатывать.
На какую специальность самый простой уровень вхождения на начальном этапе?
На самом деле, на любую. Но я, конечно, сейчас немножко с высоты своего полета на это смотрю, потому что, когда я устраивался в геймдев, я думал, что мне главное влиться, а дальше уже разберусь. Рекомендую так не делать и сразу метить в конкретную позицию, а не рассматривать какие-то позиции как временные. Очень часто, например, люди воспринимают QA как временную позицию. Это совсем не так. Не стоит так делать. QA подразумевает отдельную карьерную лестницу: тестировщики, QC, QA, и в каждом еще свои грейды. Огромное количество навыков, потом автоматизация еще. Там есть чем заняться. Если это не ваше, идите, пожалуйста, сразу в другую профессию. 
Если хотите быть левел-дизайнером, мониторьте вакансии, смотрите сайты по трудоустройству: ingamejob, hh.ru, Talents in Games и т. д. Обращайтесь в рекрутинговые агентства и говорите: «Я хочу быть левел-дизайнером и баста». Идите сразу на левел-дизайнера и нарабатывайте релевантный опыт.
Да, вы сперва можете попасть не на проект мечты, не на тот жанр, например, на который вы хотите, не на тот движок, на который вы хотите. Если вы хотите быть левел-дизайнером, как говорил мой коллега, будьте готовы в этом быть плохим, наступать на грабли и проходить через ошибки. Ну и часто бывают вакансии без опыта работы, типа интернатуры. Пользуйтесь.
И напоследок
Можете посоветовать литературу по гейм- и левел-дизайну, если таковая имеется?
По геймдизайну очень часто мои коллеги любили рекомендовать A Book of Lenses (Книга Линз). Но я рекомендую ее читать и подвергать сомнению то, что там написано — так будет максимально полезно. 
По левел-дизайну есть «Проектирование виртуальных миров» Михаила Кадикова. Хорошая вещь. Если кто хочет чуть более продвинутый анализ, то лучше читать не книгу, а сразу его блог, по моему личному субъективному мнению. 
У Макса Пирса есть две книги: одна про левел-дизайн, вторая про файт-дизайн. Есть также Томи Норберг и его учебник. Ну и никто не отменял Level Design Compendium — самую большую библиотеку публикаций по левел-дизайну в сети. Загляните еще в предыдущие статьи из нашего цикла — возможно, они будут вам полезны. Ссылки на них — в самом начале.
А вообще, если вы задались целью делать уровни, открывайте YouTube и шерстите плейлисты авторов игровых движков, начиная с Level Creation от Epic Games и далее. Сейчас нет никаких барьеров, и можно сразу начинать делать что-то свое. Пусть простое, пусть примитивное, зато своими руками.
Любите игры. До новых встреч. Я уже долго занимаюсь популяризацией левел-дизайна. Преподаю на курсах, выступаю на конференциях, провожу живые стримы и мастер-классы с вопросами и ответами, участвую в подкастах, пишу статьи, веду блог, редактирую книги. За все это время читатели и слушатели задавали мне множество нетривиальных вопросов, над некоторыми из которых я бы, пожалуй, иначе и не задумался, а какие-то попросту не смогли органично влиться ни в одну из предыдущих статей или лекций — слишком уж специфические. блог блог Эта статья — дополнение к моему циклу. В ней я поговорю обо всем не вошедшем в более ранние публикации. Снова поговорим об идеальном левел-дизайне, обо всем процессе разработки локации, какими навыками должен обладать левел-дизайнер и что уметь, и еще обо многом другом. Предыдущие статьи из цикла: Предыдущие статьи из цикла: Левел-дизайн 101: язык разработки локаций
К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна
Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты Левел-дизайн 101: язык разработки локаций Левел-дизайн 101: язык разработки локаций Левел-дизайн 101: язык разработки локаций Левел-дизайн 101: язык разработки локаций К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна К ориентиру по хлебным крошкам, или базовые приемы левел-дизайна Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты Продвинутый левел-дизайн: киноприемы в играх, кор-луп и силуэты Об идеальном левел-дизайне Какая игра для тебя эталон геймдизайна?  Геймдизайн — слишком широкое понятие. Если вы хотите посмотреть именно крутой дизайн локаций, обязательно прошерстите чуть ли не весь портфель студии Arkane Studios. У них есть абсолютно потрясающие решения, гайдлайны, по которым они собирают локации. Плюс, очень интересно бывает послушать, когда они выкладывают материалы на тему того, на каких столпах они в принципе строили дизайн. Если кто-то играл, например, в перезапущенный Prey от них же, можете сейчас припомнить — барабанная дробь — что во всей игре нет вертикальных лестниц, ни одной.   Они изначально пришли к выводу, что им не нравится пустой игровой опыт, когда игрок просто «пылесосит» стенку на вертикальной лестнице. И они решили строить все перепады высот, все элевации так, чтобы можно было их пройти без вертикальных лестниц. Таких моментов у них достаточно много. Плюс, если кто играл во второй Dishonored, там, конечно, все вспоминают теплым словом особняк Джиндоша — тот самый Clockwork Mansion. Кто не играл — это особняк с кучей сложных трансформирующихся комнат, которые полностью меняют топологию окружения. Но, на мой взгляд, не это самое интересное. Там дальше есть место, где персонаж получает в руки стеклышко, через которое он видит ту же самую локацию в другом временном промежутке. И буквально вот так просто, по нажатию одной клавиши, он переносится во времени.    По сути, что мы имеем? У нас в памяти лежит аж три версии локации, которые функционируют одновременно, потому что через это стеклышко мы видим еще и противников, которые там перемещаются. И Arkane были одними из первых, кто в принципе пошел на такой эксперимент. В Dishonored интересно играть и через стелс, и месить все вокруг. На самом деле, в Dishonored — отдельно поясню для интересующихся — есть одна проблема, свойственная для всех immersive sim. Ее лучше осознать раньше, чем позже. Игра претендует на то, чтобы поддерживать кучу стилей игры, но, на самом деле, большинство immersive sim  подразумевают один эффективный билд, который просто позволяет тебе дотянуться до всех доступных локаций. Если вспомнить, например, Deus Ex, то да, ты сперва можешь найти дверь, которая требует прокачать ручки на 8, и без этого ты не пройдешь дальше. От этого ты испытываешь некую фрустрацию, а потом находишь вентиляцию где-то рядышком и таки попадаешь за эту дверь. А потом ты видишь, что, чтобы на самом деле исследовать все-все-все доступные локации, тебе нужно иметь: взлом на трешечку, ручки на четверочку и так далее. Здесь уже может не быть реиграбельности, ведь в силу вступает мета, которая подразумевает один-единственный эффективный билд. В Dishonored похожая ситуация, ведь в общем случае идти в лобовое столкновение куда менее выгодно, чем прокачать телепорт или, например, замедление времени, и по одному чикать противников. Есть еще, конечно, второй Titanfall. К слову, там отличный и геймдизайн, и левел-дизайн. Там есть абсолютно потрясающая локация — тоже с путешествиями во времени прямо во время паркура. Это очень круто. А чего стоит локация с конвейером, который собирает по кусочкам модульные земельные участки. В общем, не буду спойлерить — пройдите, не пожалеете.   А еще — Cyberpunk 2077. Несмотря на все недостатки игры, я считаю, что там отлично сделан город. Очень жалко то, что он не дошел до релиза в том виде, в котором изначально планировался: как минимум, есть еще ярус метро, который сильно порезали.    Мне нравится и то, что в игре отдано приличное место под механику автомобиля: он там все-таки не такой рудиментарный, как мог бы быть. Но мне кажется, что там есть достаточно серьезные проблемы с боевкой, потому что зачастую, во-первых, не все билды эффективно могут пройти те или иные боевые столкновения, и во-вторых, далеко не везде общие принципы левел-дизайна работают. Во всех крупных проектах есть такие моменты, когда были какие-то изменения в процессе продакшна, которые требовали переработки на всех локациях. И не везде все успели поправить. Там есть симптомы таких вещей. Я его прошел, видел все концовки. Кто терпим к текущим багам — рекомендую. Самый стабильный клиент сейчас, как ни странно, на ПК. Карты для MOBA-игр, например, DOTA — они очень старые и очень похожи друг на друга. Это примеры идеального дизайна или просто традиция? И да, и нет. Сперва я сделаю реверанс в сторону того, что в подобных играх зачастую карта одна, и это исторически выросло из того, что, например, если взять какой-нибудь Call of Duty пятилетней давности, у него может быть 18 сетевых режимов, а про количество карт я вообще молчу. И большинство из них отмирает сразу после пика продаж. Чем меньше режимов, тем больше на них играют. По логике одной карты — на ней всегда будут играть. Почему они именно такие? Тут одновременно и ошибка выжившего, и везение, и действительно хороший дизайн — потому что в той же DOTA это классический «клевер», трехлайновая локация (с раками на миде, конечно же). Она достаточно равновесная, понятная, легко меморизируемая. Это сделано не просто так и не за один день, и это дизайн, который работает. Даже в шутерах от первого лица зачастую референсят дотовую карту и делают двух-трехлайновую локацию с понятным сочетанием сегментов. На самом деле, если вы, например, посмотрите на карту DOTA, а потом на, простите, DE_Dust2 из Counter-Strike, вы увидите несколько пересечений.   Какие самые необычные решения ты встречал в левел-дизайне — например, как Silent Hill 2 со своим туманом? Хороший вопрос. Как я уже говорил, это путешествие во времени прямо во время паркура в Titanfall 2 и сборка локации по конвейеру в нем же. Что бы такого еще интересного? Например, из недавнего дополнения Psycho Krieg для Borderlands 3 — там абсолютно потрясающий левел-дизайн. От и до все дополнение — просто пушка. Крайне творчески подошли ребята. Не буду рассказывать в деталях — это все будет спойлерами. Я оставлю один из снимков своего прохождения, но, думаю, вы даже не поймете, где здесь верх, а где — низ.   Плюс, если хотите очень крутой левел-дизайн, который еще и опирается на то, как его проходит игрок, внезапно — это кампания к последнему Call of Duty, которая Black Ops Cold War. Последние 2-3 локации перестраиваются на ходу в зависимости от решений игрока. Снимаю шляпу: так круто давно никто не делал. От концепта до плейтестов — все о разработке локаций С чего начинается разработка уровня? На одном из курсов я рассказывал, что пайплайны производства уровней бывают разные, и это очень сильно зависит от студии. Когда левел-дизайнер приходит и говорит: «У меня есть идея, я сейчас покажу ее на блокауте», — это сферический конь в вакууме. Хорошо, когда есть такая возможность — для левел-дизайнера это потрясающая точка роста с максимальной ответственностью за результат, потому что с него начинается продакшен. Потом могут начать концептирование с абсолютно разных этапов. Но бывает и наоборот: особо крупные игроки на рынке могут начать с концептов, когда они ищут дирекшн.  Бывают те, кто начинают сразу с арт-пассов: везут художников по нужным локациям и затем сажают их за работу. Желательно, чтобы с ними вместе были и арт-директора, и вообще все, кто высказывает затем свое мнение. Взять, например, Red Dead Redemption — сначала там готовили карту мира с идентичной архитектурой, всевозможными оммажами на Лос-Анджелес и не только, после чего уже приглашали дизайнера, чтобы сделать из этого игру.    Нужно, чтобы был человек, который решает, что в игре важнее: графика, геймплей или что-то еще. Это не значит, что они должны воевать друг с другом. Если важнее графика, сначала вы делаете визуал и пытаетесь его сохранить, не сломав его на игровом оперировании. Если важнее геймплей, сначала вы все делаете на гибких инструментах с очень примитивной графикой, которая легко итерируется в течение дня по несколько раз. Почему фаза концептирования так важна? Чувствую, нужно пояснить одну важную вещь. Я бы не называл концептами блокаут, потому что одно дело, когда левел-дизайнера попросили накидать «концепт», потому что в большинстве случаев он будет некрасивым, если это самая-самая первая итерация, и левел-дизайнер приносит драфт. Он может не играться, он может плохо выглядеть, но по нему будет понятна макро-топология, как расположены пути, как будет работать навигация, где будут точки схождения и так далее. Но это все равно будет блокаут, т. к. задачей левел-дизайнера был и остается прототип игрового процесса, а не внешнего вида. Совсем другая история — концепты художественные, на которых нанимают специальных художников. Причем идеально, когда эти ребята работают не только в 2D, а могут экспортировать сцену, покрутить свет и после этого сделать скриншоты, перенести их в Photoshop и там дорисовать. Концепты могут быть либо после игрового итерирования — если говорить о совсем трендовых пайпах, левел-дизайнеры могут работать и параллельно с концепт-художниками. Макро-топология не меняется, и концепт-художники сразу берут ее за основу, показывая, что из этого можно сделать визуально. Когда концепты состоялись и прошли арт-дирекшн, начинается арт-пасс, где и геймплей уже готов, и понятно, куда двигаться визуально.  Нужно ли мне как левел-дизайнеру расставлять мелкие камни, лужи и т. д.? Действительно, есть парадигма, что чем больше вы умеете, тем более вы можете быть полезным на проекте. Но суть в том, что если эта лужа не влияет на геймплей, и уровень от этого не становится интереснее, это не ваша работа. Геймдизайнер уровней отвечает на вопрос, насколько интересно уровень играется, а уже художник отвечает за то, как оно выглядит. Если у вас вода замедляет персонажа или активирует плавание, конечно, это ваша задача — ее поставить. Если вам нужна лужа только для того, чтобы от нее свет отражался — это работа артиста. По сути, можно дорабатывать карту бесконечно долго, но когда вы понимаете, что нужно остановиться, что карта готова? Я бы рекомендовал в продакшене потратить время на то, чтобы четко обозначить, при каких условиях локация считается готовой, сданной. Потому что, если у вас идет проект, и сданных локаций нет, значит, вы что-то делаете совсем не так. Локации все параллельно не могут разрабатываться до релиза. Это чушь. Вы выстрелите себе в ногу в таком случае. Упростите себе жизнь и отчеркните, что вы геймплейно считаете локацию завершенной, когда она отвечает таким-то требованиям, после чего обращайтесь к левел-дизайнеру только для того, чтобы восстановить или поддержать геймплей этой локации. И работайте уже с артом, чтобы локация отвечала артовым требованиям. Хорошо, когда есть ведущий левел-дизайнер или ведущий геймдизайнер, который принимает локации и говорит: «Вот LD-пасс готов. Следующие LD-пассы будут рудиментарны, только на поддержку». Хорошо, когда есть арт-директор или арт-продюсер, который говорит: «Артовая локация готова. Если в ней что-то будет меняться, мы будем просто перепекать цвет и навигацию». Может ли художник «сломать» мой уровень? Не стоит надеяться на то, что ваш продукт, попав в другой отдел, обязательно сохранит все, что вы от него ожидаете. У людей есть свои хотелки, свои руководители, которые тоже могут расходиться во мнениях. Вам не нужно договариваться о том, что никто ничего не ломает — вам нужно договориться о том, в каких рамках вы ломаете. Я отдаю уровень и говорю: «Этот объект ломай как угодно, мне неважно, какой он будет формы. А это — артовая доминанта, мне неважно, как она будет выглядеть, но она должна быть видна откуда угодно».  Мы отвечаем за функционал. Визуал — это задача художника, и, естественно, все, к кому в руки попадает карта, так или иначе ее меняют — нужно только договориться, как. Как узнать, насколько игрокам нравится уровень? Плейтесты, плейтесты и еще раз плейтесты. Сперва внутри команды, потом внутри студии, потом на чуть более широкую аудиторию — какую-то тестовую группу, — а потом уже, например, всякие софт-лончи, ЗБТ и так далее. Дайте поиграть тому, кто наименее ангажирован, и кто не разработчик. Дайте поиграть своей бабушке, маме или кому-то другому из близких, далекому от игр. Посмотрите, как внезапно на них работают все эти базовые принципы левел-дизайна: куда падает взгляд, куда они движутся. Разный левел-дизайн Отличается ли сложность разработки 2D- и 3D-локации?  Да, безусловно. Хотя я бы разделил здесь все-таки даже на три категории:  первая — это в принципе 2D-игры,  
вторая — то, что раньше было модно называть 2,5D. То есть, когда у тебя геймплей происходит в плоскости, но на самом деле игра трехмерная. Например, Duke Nukem: Manhattan Project — очень наглядный пример подобного жанра, 
3D-игры, у которых перемещение уже по всем трем осям — будь это от третьего лица или от первого.  первая — это в принципе 2D-игры,   первая — это в принципе 2D-игры,   вторая — то, что раньше было модно называть 2,5D. То есть, когда у тебя геймплей происходит в плоскости, но на самом деле игра трехмерная. Например, Duke Nukem: Manhattan Project — очень наглядный пример подобного жанра,  вторая — то, что раньше было модно называть 2,5D. То есть, когда у тебя геймплей происходит в плоскости, но на самом деле игра трехмерная. Например, Duke Nukem: Manhattan Project — очень наглядный пример подобного жанра,  3D-игры, у которых перемещение уже по всем трем осям — будь это от третьего лица или от первого.  3D-игры, у которых перемещение уже по всем трем осям — будь это от третьего лица или от первого. ]]></text>
</doc>
